type Condition @entity {
  id: ID!
  creator: Bytes!
  oracle: Bytes!
  questionId: Bytes!
  outcomeSlotCount: Int!
  resolved: Boolean!
  payoutNumerators: [BigInt!]
  payoutDenominator: BigInt
  createTransaction: Bytes!
  creationTimestamp: BigInt!
  resolveTransaction: Bytes
  resolveTimestamp: BigInt
  blockNumber: BigInt
  collections: [Collection!] @derivedFrom(field: "conditions")
}

type Collection @entity {
  id: ID!
  conditions: [Condition!]!
  indexSets: [BigInt!]!
}

type Position @entity {
  id: ID!
  collateralToken: Bytes!
  collection: Collection!
  # totalValue: BigInt
}

type UserPosition @entity {
 id: ID!
 position: Position! 
 balance: BigInt!
 user: User! 
}

type User @entity {
 id: ID!
 userPositions: [UserPosition!] @derivedFrom(field: "user")
 # participatedConditions: [Condition!]
 # firstParticipation: BigInt
 # lastActive: BigInt
}



